{
  "application": {
    "name": "The name of the application (e.g., medicare-app, chat-service, ecommerce-platform). This is a single-valued field.",
    "type": [
      "The type of application. Possible values include 'client', 'server', 'microservice', 'web', 'API', 'CLI', 'desktop', 'IoT', 'serverless'. Multiple values can be included here if the application spans multiple types."
    ],
    "description": "A brief summary of the application's purpose or functionality (e.g., 'A web application for medical consultations' or 'An API for financial data'). This is a single-valued field.",
    "dependencies": [
      {
        "name": "The name of a software dependency required by the application (e.g., 'express', 'react', 'lodash'). Each dependency has its own entry, making this a multi-valued field.",
        "version": "The version of the dependency (e.g., '4.18.1', '17.0.2'). Each dependency specifies its version as a single-valued field.",
        "required": "A boolean value indicating whether the dependency is mandatory for the application to function (true or false). For example, 'true' for critical dependencies and 'false' for optional ones."
      }
    ],
    "language": [
      "The programming languages used in the application (e.g., 'Python', 'JavaScript', 'Java'). This is a multi-valued field."
    ],
    "framework": [
      "The frameworks used in the application (e.g., 'Django', 'Express', 'Spring', 'React', 'Angular'). This is a multi-valued field."
    ],
    "architecture": [
      "The architectural style of the application. Possible values include 'monolith', 'microservice', 'serverless', 'event-driven', 'hybrid'. This is a multi-valued field."
    ],
    "logging_and_monitoring": {
      "enabled": "A boolean value indicating whether logging and monitoring are enabled (true or false).",
      "logging_format": [
        "The format of logs generated by the application. Possible values include 'structured' and 'unstructured'. This is a multi-valued field."
      ],
      "monitoring_tool": [
        "The monitoring tools used for the application (e.g., 'Prometheus', 'Grafana', 'CloudWatch'). This is a multi-valued field."
      ]
    }
  },
  "environment": {
    "deployment_type": [
      "The type of deployment environment. Possible values include 'container', 'virtual_machine', 'bare-metal', 'kubernetes', 'serverless'. This is a multi-valued field."
    ],
    "cloud_provider": [
      "The cloud providers used for deployment. Possible values include 'AWS', 'GCP', 'Azure', 'On-Premise', 'Multi-cloud'. This is a multi-valued field."
    ],
    "region": [
      "The geographical regions where the application is deployed (e.g., 'us-east', 'europe-west', 'asia-south'). This is a multi-valued field."
    ],
    "scaling": {
      "type": [
        "The type of scaling used. Possible values include 'manual' and 'auto'. This is a single-valued field."
      ],
      "min_units": "The minimum number of instances or units for scaling (e.g., 1). This is a single-valued field.",
      "max_units": "The maximum number of instances or units for scaling (e.g., 10). This is a single-valued field."
    },
    "runtime": [
      "The runtime environment of the application. Possible values include 'Docker', 'Kubernetes', 'VM Image', 'Lambda'. This is a multi-valued field."
    ],
    "configuration_management": [
      "The tools used for configuration management. Possible values include 'Ansible', 'Puppet', 'none'. This is a multi-valued field."
    ],
    "environment_variables": ["A list of environment variables required for the application (e.g., 'API_KEY', 'DB_PASSWORD'). This is a multi-valued field."]
  },
  "infrastructure": {
    "iac_tool": [
      "The infrastructure-as-code tools used for managing infrastructure. Possible values include 'Terraform', 'Pulumi', 'CloudFormation'. This is a multi-valued field."
    ],
    "storage": [
      {
        "type": "The type of storage used. Possible values include 'relational', 'NoSQL', 'object'. This is a single-valued field for each storage entry.",
        "example": "An example of the storage used (e.g., 'PostgreSQL', 'MongoDB', 'S3'). This is a single-valued field for each storage entry."
      }
    ],
    "networking": [
      {
        "component": "The networking component (e.g., 'VPC/Subnet', 'Load Balancer', 'Firewall/Security Group'). This is a single-valued field for each networking entry.",
        "purpose": "The purpose of the networking component (e.g., 'Network isolation', 'Access rules'). This is a single-valued field for each networking entry."
      }
    ],
    "monitoring_and_alerting": [
      "The tools used for monitoring and alerting (e.g., 'Prometheus', 'Grafana', 'CloudWatch'). This is a multi-valued field."
    ]
  },
  "ci_cd": {
    "pipeline_tool": [
      "The CI/CD tools used for the application (e.g., 'GitHub Actions', 'Jenkins', 'GitLab CI', 'CircleCI'). This is a multi-valued field."
    ],
    "steps": [
      {
        "name": "The name of a CI/CD step (e.g., 'build', 'test', 'deploy'). This is a single-valued field for each step.",
        "artifact": "The artifact produced by the step (e.g., 'binary', 'test report', 'deployment manifest'). This is a single-valued field for each step."
      }
    ],
    "deployment_strategy": [
      "The deployment strategy used. Possible values include 'rolling', 'canary', 'blue-green'. This is a multi-valued field."
    ],
    "rollback_mechanism": {
      "strategy": "The rollback mechanism strategy (e.g., 'revert version', 'traffic shift'). This is a single-valued field.",
      "automated": "A boolean value indicating whether the rollback mechanism is automated (true or false)."
    }
  },
  "artifacts": {
    "build_artifacts": [
      {
        "type": "The type of build artifact (e.g., 'Dockerfile', 'IaC template', 'Manifest'). This is a single-valued field for each artifact.",
        "purpose": "The purpose of the build artifact (e.g., 'Build container image'). This is a single-valued field for each artifact."
      }
    ],
    "pipeline_artifacts": [
      {
        "type": "The type of pipeline artifact (e.g., 'Pipeline config', 'Test report'). This is a single-valued field for each artifact.",
        "purpose": "The purpose of the pipeline artifact (e.g., 'Results from automated tests'). This is a single-valued field for each artifact."
      }
    ],
    "deployment_artifacts": [
      {
        "type": "The type of deployment artifact (e.g., 'Manifest', 'Binary or Image'). This is a single-valued field for each artifact.",
        "example": "An example of the deployment artifact (e.g., 'Helm chart', 'Docker container'). This is a single-valued field for each artifact."
      }
    ],
    "artifact_registry": [
      "The artifact registry used (e.g., 'DockerHub', 'ECR', 'GCR', 'Custom Registry'). This is a multi-valued field."
    ]
  },
  "security": {
    "authentication": [
      "The authentication mechanisms used (e.g., 'OAuth2', 'JWT', 'SAML'). This is a multi-valued field."
    ],
    "authorization": [
      "The authorization mechanisms used (e.g., 'RBAC', 'ABAC'). This is a multi-valued field."
    ],
    "encryption": [
      "The types of encryption used (e.g., 'In-transit', 'At-rest'). This is a multi-valued field."
    ],
    "secret_management": [
      "The tools or mechanisms used for managing secrets (e.g., 'Vault', 'AWS Secrets Manager', 'Kubernetes Secrets'). This is a multi-valued field."
    ]
  },
  "observability": {
    "logging": {
      "format": "The format of logs generated by the application (e.g., 'structured', 'unstructured'). This is a single-valued field.",
      "aggregation_tool": [
        "The tools used for aggregating logs (e.g., 'ELK Stack', 'CloudWatch'). This is a multi-valued field."
      ]
    },
    "metrics": {
      "system": "The tools used to monitor system metrics (e.g., 'Prometheus', 'Grafana'). This is a single-valued field.",
      "custom": "The tools used to monitor custom application-defined metrics (e.g., custom dashboards). This is a single-valued field."
    },
    "tracing": [
      "The tracing tools used for monitoring distributed systems (e.g., 'Jaeger', 'OpenTelemetry'). This is a multi-valued field."
    ]
  },
  "testing": {
    "unit_tests": {
      "tool": [
        "The tools used for unit testing (e.g., 'JUnit', 'PyTest', 'Mocha'). This is a multi-valued field."
      ],
      "artifact": "The artifacts produced by unit tests (e.g., 'Test report'). This is a single-valued field."
    },
    "integration_tests": {
      "tool": [
        "The tools used for integration testing (e.g., 'Postman', 'Cypress'). This is a multi-valued field."
      ],
      "artifact": "The artifacts produced by integration tests (e.g., 'Integration test report'). This is a single-valued field."
    },
    "performance_tests": {
      "tool": [
        "The tools used for performance testing (e.g., 'JMeter', 'Locust'). This is a multi-valued field."
      ],
      "artifact": "The artifacts produced by performance tests (e.g., 'Performance metrics'). This is a single-valued field."
    },
    "security_tests": {
      "tool": [
        "The tools used for security testing (e.g., 'OWASP ZAP', 'Snyk'). This is a multi-valued field."
      ],
      "artifact": "The artifacts produced by security tests (e.g., 'Vulnerability scan report'). This is a single-valued field."
    }
  },
  "notifications": {
    "channels": [
      "The channels used for notifications (e.g., 'Slack', 'Teams', 'Email', 'PagerDuty'). This is a multi-valued field."
    ],
    "alerts": [
      "The types of alerts configured (e.g., 'Threshold-based', 'Anomaly detection'). This is a multi-valued field."
    ]
  },
  "documentation": {
    "required_documents": [
      {
        "type": "The type of required documentation (e.g., 'README', 'API Docs', 'Deployment Guide'). This is a single-valued field for each document.",
        "purpose": "The purpose of the document (e.g., 'Overview and instructions', 'How to deploy and manage the application'). This is a single-valued field for each document."
      }
    ],
    "storage_location": "The storage location of the documentation (e.g., 'Confluence', 'GitHub'). This is a single-valued field."
  },
  "additional_info": {
    "constraints": "Any specific policies, legal constraints, or business rules that apply to the application. This is a single-valued field.",
    "dependencies": "Interdependencies with other systems or services that the application relies on. This is a single-valued field.",
    "SLA_requirements": "The Service Level Agreements that the application must adhere to. This is a single-valued field.",
    "backup_and_recovery": {
      "backup_frequency": "The frequency of backups (e.g., 'Daily', 'Weekly'). This is a single-valued field.",
      "recovery_time_objective": "The time required to recover the application in case of failure (e.g., '1 hour'). This is a single-valued field."
    }
  }
}
